stages:
  - linting
  - building
  - testing

variables:
  POSTGRES_DB: $POSTGRES_DB
  POSTGRES_NAME: $POSTGRES_DB
  POSTGRES_HOST: $POSTGRES_DB
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_PORT: 5432

default:
  image: python:3.12
  before_script:
    - pip install -r requirements/lint.txt

black:
  stage: linting
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check .

flake8:
  stage: linting
  image: registry.gitlab.com/pipeline-components/flake8:latest
  script:
    - flake8 --show-source --statistics .

ruff:
  stage: linting
  image: registry.gitlab.com/pipeline-components/ruff:latest
  script:
    - ruff check .

isort:
  stage: linting
  script:
    - isort --check .

djlint:
  stage: linting
  script:
    - djlint .

eslint:
  stage: linting
  image: registry.gitlab.com/pipeline-components/eslint:latest
  before_script:
    - cd chattr/chattr-react
  script:
    - eslint --ext .jsx

frontend:
  stage: building
  image: node
  before_script:
    - cd chattr/chattr-react
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - chattr/chattr-react/dist/

homepage:
  stage: testing
  services:
    - postgres
  before_script:
    - pip install -r requirements/prod.txt
    - pip install -r requirements/test.txt
    - cd chattr
  script:
    - python3 manage.py migrate
    - python3 manage.py test homepage

api_homepage:
  stage: testing
  services:
    - postgres
  before_script:
    - pip install -r requirements/prod.txt
    - pip install -r requirements/test.txt
    - cd chattr
  script:
    - python3 manage.py migrate
    - python3 manage.py test api/homepage

